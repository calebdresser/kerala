# Caleb Dresser MD
# BIDMC / HSPH / FXB

###
### LETS CLEAN UP THE RAINFALL TREND DATA

#import the rainfall data (hand-coded from 0 to 5 based on indian meteorological service rainmap JPG files)
rain2019 <- read.csv(file = file.choose(),  header = TRUE)

# add a column that is raingall in centimeters, based on 
# the minimum cutoff value for each category on the IMS maps
rain2019$RainCM <- with(rain2019, ifelse (Rainfall == 0, 0,
ifelse (Rainfall == 1, 0.1, 
ifelse (Rainfall == 2, 2.5,
ifelse (Rainfall == 3, 15.6,
ifelse (Rainfall == 4, 64.5,
ifelse (Rainfall == 5, 115.6, 0)))))))

# look at the data
head(rain2019)

#plot rainfall by day, color code districts
# variety of visualization options in ggplot2
raintrendsline2019 <- ggplot(data=rain2019, aes (x = DayAug, y = RainCM)) + geom_line(aes(color=Location))
raintrendsline2019

raintrendssmooth2019 <- ggplot(data=rain2019, aes (x = DayAug, y = RainCM)) + geom_smooth(aes(color=Location), n=14, se=FALSE)
raintrendssmooth2019

# Now lets export the data to a CSV file so we can get 
# district level totals into our other file (by district)
write.csv(rain2019, file = "2019 Rainfall in Centimeters.csv")

###
###
### GREAT, NOW WE HAVE RAINFALL DATA IN OUR DISTRICT LIST FILE

# Lets load the distric list file
kerala <- read.csv( file = file.choose() , header = TRUE)

# Lets peek at the data
head (kerala)

# Lets look at whether death rate was related to rainfall
deathrain <- ggplot(data = kerala, aes (x = Rain2019, y = DEathRate2019)) + 
geom_point (aes(color=District)) +
xlab("Two Week Rainfall Estimate (cm)")+
ylab("Death Rate")
deathrain

##
##
## OK, NOW WE NEED 2018 RAINFALL DATA 

#import the rainfall data (hand-coded from 0 to 5 based on indian meteorological service rainmap JPG files)
rain2018 <- read.csv(file = file.choose(),  header = TRUE)

# add a column that is raingall in centimeters, based on 
# the minimum cutoff value for each category on the IMS maps
rain2018$RainCM <- with(rain2018, ifelse (Rainfall == 0, 0,
ifelse (Rainfall == 1, 0.1, 
ifelse (Rainfall == 2, 2.5,
ifelse (Rainfall == 3, 15.6,
ifelse (Rainfall == 4, 64.5,
ifelse (Rainfall == 5, 115.6, 0)))))))

# look at the data
head(rain2018)

#plot rainfall by day, color code districts
# variety of visualization options in ggplot2
raintrendsline2018 <- ggplot(data=rain2018, aes (x = DayAug, y = RainCM)) + geom_line(aes(color=Location))
raintrendsline2018

raintrendssmooth2018 <- ggplot(data=rain2018, aes (x = DayAug, y = RainCM)) + geom_smooth(aes(color=Location), n=14, se=FALSE)
raintrendssmooth2018

# Now lets export the data to a CSV file so we can get 
# district level totals into our other file (by district)
write.csv(rain2018, file = "2018 Rainfall in Centimeters.csv")

##
##
## SO NOW WE HAVE A FILE WITH EACH DISTRICT AND ASSOCIATED
## IMPACT DATA FROM 2019, PLUS RAINFALL FROM 2018 and 2019

#lets load our dataset
kerala <- read.csv (file = file.choose(), header = TRUE)

# lets look at the data
head(kerala)

# Lets see how rainfall in 2019 compared with 2018
kerala$RainDifference <- with(data = kerala, Rain2019 - Rain2018)
kerala

raincomp <- ggplot (data = kerala, aes(x=District, y= RainDifference)) + geom_col() + 
ggtitle("2019 Rainfall in Comparison to 2018 Rainfall (estimated, cm)")

# We can also look at 2018 vs 2019 rainfall as a scatterplot; if they were the 
# same in each place we'd see a strait line (indicated 
# by the solid line, showing 1:1 ratio)
rainscatter <- ggplot (data = kerala, aes (x=Rain2018, y=Rain2019)) + geom_point() +
geom_segment(aes(x = 0, y = 0, xend = 400, yend = 400)) + xlim(0, 800)+ylim(0, 800)

# OK - now we can see if there's any relationship between the mortality rate observed in 2019
# and the position of these points (ie. was there a protective effect to having experinced 
# lots of rain last year? was there risk associated with not having seen heavy rain last year?

rainscatter <- ggplot (data = kerala, aes (x=Rain2018, y=Rain2019)) + geom_point(aes(),size=(kerala$DeathRate2019*500000)) +
geom_segment(aes(x = 0, y = 0, xend = 400, yend = 400)) + xlim(0, 800) + ylim(0, 800)
rainscatter


